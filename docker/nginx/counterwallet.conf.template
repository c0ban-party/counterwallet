upstream cache_server {
  server ${REDIS_HOST}:${REDIS_PORT};
  keepalive 128;
}
upstream counterblock_api_server {
  server ${COUNTERBLOCK_HOST_MAINNET}:${COUNTERBLOCK_PORT_MAINNET};
  keepalive 30;
}
upstream counterblock_t_api_server {
  server ${COUNTERBLOCK_HOST_TESTNET}:${COUNTERBLOCK_PORT_TESTNET};
  keepalive 30;
}

#Content Security Policy (CSP) header
add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://ssl.google-analytics.com https://query.yahooapis.com; img-src 'self' data: https://ssl.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://themes.googleusercontent.com https://fonts.gstatic.com; frame-src 'none'; object-src 'self'; connect-src 'self' wss://$host wss://*.counterwallet.io https://*.counterwallet.io https://api.rollbar.com https://bitcoinfees.earn.com https://apiv2.bitcoinaverage.com https://min-api.cryptocompare.com; report-uri /_report_csp/;";

server {
  #DEV PORT (firewall on production systems)
  listen 81;
  server_name _;
  
  #for nginx newrelic agent
  location /nginx_stub_status {
    stub_status on;
    access_log off;
    allow 127.0.0.0/8;
    deny all;
  }  
}

server {
  listen 80 default_server deferred;
  server_name _;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  
  # basic rate limiting
  limit_conn conn_limit_per_ip 25;
  limit_req zone=req_limit_per_ip burst=200 nodelay;
  
  # this has to be higher than we'd like otherwise, due to the create_support_case API call...
  client_max_body_size 1m; 

  ###############
  # BASE SITE SERVING (STATIC FILES)

  # CACHING - For production use
  open_file_cache max=200000 inactive=20s; 
  open_file_cache_valid 30s; 
  open_file_cache_min_uses 2;
  open_file_cache_errors on;    
    
  location /_asset_img/ {
    access_log off;
    expires 1h;
    alias /counterblock_data/asset_img;
  }
  location /_t_asset_img/  {
    access_log off;
    expires 1h;
    alias /counterblock_data/asset_img.testnet/;
  }
  location /src  {
    #For dev/testing (uses unminified resources)
    open_file_cache off;
    expires off;
    alias /counterwallet/src/;
  }
  location /counterwallet.conf.json  {
    alias /counterwallet/counterwallet.conf.json;
  }
  location /  {
    access_log off;
    expires 1h;
    root /counterwallet/build/;
    
    #Enable this during single server system updates
    #root /var/www_upgrade_root;
  }
  #############

  #####
  # PRODUCTION
  # PROXY TO COUNTERWALLETD API REQUESTS (WSGI) - try to hit the cache in redis first
  location ^~ /_api
  {
    #reject everything except GET, POST and OPTIONS
    limit_except GET POST OPTIONS {
      deny all;
    }

    include /etc/nginx/sites-enabled/counterblock_api_cache.inc;
    set $redis_db "${REDIS_DB}";

    # Send to app server if Redis could not answer the request
    error_page 404 405 550 = @wsgi_api;
  }
  # PROXY TO COUNTERBLOCK API BACKEND (WSGI)
  location @wsgi_api {
    include /etc/nginx/sites-enabled/counterblock_api.inc;
    rewrite ^/_api/?$ /api/?  break;    
    proxy_pass   http://counterblock_api_server;
  }
  # PROXY TO COUNTERBLOCK FEED BACKEND (socket.io)
  location ^~ /_feed {
    include /etc/nginx/sites-enabled/counterblock_socketio.inc;
    proxy_pass   http://${COUNTERBLOCK_HOST_MAINNET}:${COUNTERBLOCK_PORT_MAINNET_FEED}/socket.io;
  }
  # PROXY TO COUNTERBLOCK CHAT BACKEND (socket.io)
  location ^~ /_chat {
    include /etc/nginx/sites-enabled/counterblock_socketio.inc;
    proxy_pass   http://${COUNTERBLOCK_HOST_MAINNET}:${COUNTERBLOCK_PORT_MAINNET_CHAT}/socket.io;
  }
  
  #####
  # TESTNET  
  # PROXY TO COUNTERBLOCK API REQUESTS (WSGI) - try to hit the cache in redis first
  location ^~ /_t_api
  {
    #reject everything except GET, POST and OPTIONS
    limit_except GET POST OPTIONS {
      deny all;
    }

    include /etc/nginx/sites-enabled/counterblock_api_cache.inc;
    set $redis_db "1";

    # Send to app server if Redis could not answer the request
    error_page 404 405 550 = @t_wsgi_api;
  }
  # PROXY TO COUNTERBLOCK API BACKEND (WSGI)
  location @t_wsgi_api {
    include /etc/nginx/sites-enabled/counterblock_api.inc;
    rewrite ^/_t_api/?$ /api/?  break;
    proxy_pass   http://counterblock_t_api_server;
  }
  # PROXY TO COUNTERBLOCK FEED BACKEND (socket.io)
  location ^~ /_t_feed {
    include /etc/nginx/sites-enabled/counterblock_socketio.inc;
    proxy_pass   http://${COUNTERBLOCK_HOST_TESTNET}:${COUNTERBLOCK_PORT_TESTNET_FEED}/socket.io;
  }
  # PROXY TO COUNTERBLOCK CHAT BACKEND (socket.io)
  location ^~ /_t_chat {
    include /etc/nginx/sites-enabled/counterblock_socketio.inc;
    proxy_pass   http://${COUNTERBLOCK_HOST_TESTNET}:${COUNTERBLOCK_PORT_TESTNET_CHAT}/socket.io;
  }
  
  #####
  # CSP REPORTING (mainnet and testnet)
  location ^~ /_report_csp/ {
    proxy_pass   http://counterblock_api_server;
  }
}
